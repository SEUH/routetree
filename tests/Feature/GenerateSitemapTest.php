<?php

namespace RouteTreeTests\Feature;

use Carbon\Carbon;
use Illuminate\Filesystem\Filesystem;
use RouteTreeTests\TestCase;
use Webflorist\RouteTree\Domain\RouteNode;
use Webflorist\RouteTree\Domain\SitemapUrl;

class GenerateSitemapTest extends TestCase
{
    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        (new Filesystem())->delete(
            $this->getSitemapOutputFile()
        );
    }

    protected function tearDown() : void
    {
        /*
        (new Filesystem())->delete(
            $this->getSitemapOutputFile()
        );
        */
        parent::tearDown();
    }

    private function getSitemapOutputFile()
    {
        return base_path(config('routetree.sitemap.output_file'));
    }


    public function test_simple()
    {
        $this->routeTree->root(function (RouteNode $node) {
            $node->get('\RouteTreeTests\Feature\Controllers\TestController@get');
        });

        $this->routeTree->generateAllRoutes();

        $this->artisan('routetree:generate-sitemap')->assertExitCode('0');
        $this->assertFileExists($this->getSitemapOutputFile());
        $this->assertXmlStringEqualsXmlFile($this->getSitemapOutputFile(),'<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd"
        xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">

    <url>
        <loc>http://localhost/de</loc>
    </url>
    <url>
        <loc>http://localhost/en</loc>
    </url>


</urlset>');
        //$this->assertXmlFileEqualsXmlFile();
    }

    public function test_complex()
    {
        $this->routeTree->root(function (RouteNode $node) {
            $node->get('\RouteTreeTests\Feature\Controllers\TestController@get');
            $node->sitemap
                ->lastmod(Carbon::parse('2019-11-16T17:46:30.45+01:00'))
                ->changefreq('monthly')
                ->priority(1.0)
            ;
        });

        $this->routeTree->generateAllRoutes();

        $this->artisan('routetree:generate-sitemap')->assertExitCode('0');
        $this->assertFileExists($this->getSitemapOutputFile());
        $this->assertXmlStringEqualsXmlFile($this->getSitemapOutputFile(),'<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd"
        xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
    <url>
        <loc>http://localhost/de</loc>
        <lastmod>2019-11-16T17:46:30+01:00</lastmod>
        <changefreq>monthly</changefreq>
        <priority>1.0</priority>
    </url>
    <url>
        <loc>http://localhost/en</loc>
        <lastmod>2019-11-16T17:46:30+01:00</lastmod>
        <changefreq>monthly</changefreq>
        <priority>1.0</priority>
    </url>
</urlset>');
    }


}